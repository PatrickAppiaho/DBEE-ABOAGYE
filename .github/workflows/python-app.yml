# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]
  schedule:
    - cron: '*/35 * * * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read


jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
#          - os: ubuntu-latest
#            pip-cache: ~/.cache/pip
#          - os: macos-latest
#            pip-cache: ~/Library/Caches/pip
          - os: windows-latest
            pip-cache: ~\AppData\Local\pip\Cache
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - uses: actions/cache@v4
        id: cache
        with:
          path: ${{ matrix.pip-cache }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
#      - name: Setup chrome
#        uses: browser-actions/setup-chrome@v1
      - name: Setup geckodriver
        uses: browser-actions/setup-geckodriver@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup firefox
        uses: browser-actions/setup-firefox@v1
      - name: Install dependencies
        run: |
          make install-actions
      - name: Run
        run: |
          make run
